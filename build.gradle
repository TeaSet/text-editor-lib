buildscript {
	ext {
		set('springBootVersion', '2.2.9.RELEASE')
		set('io.spring.dependency-management', '1.0.9.RELEASE')
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.swisscom.undo.manager'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
	set('janino', '3.0.6')
	set('logback', '0.1.5')
	set('slf4j', '1.7.25')
	set('junit5', '5.5.2')
	set('commonsLang3', '3.9')
	set('commonsIo', '2.6')
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

    /**
     * Lombok
     */
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')

	/**
	 * Others
	 */

	compile("org.slf4j:slf4j-api:${slf4j}")
	compile("org.apache.commons:commons-lang3:${commonsLang3}")
	compile("commons-io:commons-io:${commonsIo}")
}

task cleanResources(type: Delete) {
	delete 'build/resources'
}

springBoot {
	mainClassName = 'com.swisscom.undo.manager.SwissServiceApplication'
	buildInfo()
}

bootRun {
	args = []
	systemProperties System.properties
}

compileJava {
	sourceCompatibility = '11'
	targetCompatibility = '11'
}

test {
	useJUnitPlatform()
}

configurations {
	compileJava.dependsOn processResources
	processResources.dependsOn cleanResources, bootBuildInfo
	bootBuildInfo.mustRunAfter cleanResources
}
